// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render App 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="bg-crest h-screen w-screen  bg-center bg-no-repeat"
      >
        <div
          class="flex w-full flex-row items-center justify-between bg-[rgb(0,0,0,0.8)] p-1 px-10"
        >
          <div
            class="relative text-2xl text-primary"
          >
            <img
              src="/public/undername_market_logo.png"
              width="120px"
            />
            <div
              class="bg-night-sky-thin absolute bottom-[5px] right-[-20px] w-fit rounded-md p-1 px-2 text-sm font-bold text-matrix shadow-one"
            />
          </div>
          <div
            class="flex flex-row gap-4"
          >
            <button
              class="border-black bg-night-sky-thin transition-all-5s rounded-md border-[1px] p-4 text-xl text-secondary shadow-url hover:bg-matrixThin"
            >
              Purchase an undername
            </button>
            <button
              class="mocked-styled-1 b1cb9caz w14emrir b1cb9caz"
              style="--b1cb9caz-0: Manrope; --b1cb9caz-1: 0, 0, 0; --b1cb9caz-2: 30px; --b1cb9caz-3: 0px 0px 2px rgba(0, 0, 0, .15), 0px 4px 7px rgba(0, 0, 0, .1); --w14emrir-0: 18px; --w14emrir-1: rgba(109, 108, 105, 0.5);"
            >
              <span
                class="mocked-styled-2 czh4f0e"
              >
                Connect Wallet
              </span>
            </button>
          </div>
        </div>
        <div
          class="center flex flex-row"
        >
          Loading
        </div>
        <div
          class="modal-container p-10 flex flex-row justify-center items-center bg-[rgb(0,0,0,0.3)] z-50"
          style="opacity: 0;"
        >
          <div
            class="bg-[rgb(0,0,0,0.95)] text-secondary w-[500px] h-[200px] flex flex-col justify-center items-center p-10 rounded-lg shadow-url"
          >
            Signing Transaction, please wait.
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="bg-crest h-screen w-screen  bg-center bg-no-repeat"
    >
      <div
        class="flex w-full flex-row items-center justify-between bg-[rgb(0,0,0,0.8)] p-1 px-10"
      >
        <div
          class="relative text-2xl text-primary"
        >
          <img
            src="/public/undername_market_logo.png"
            width="120px"
          />
          <div
            class="bg-night-sky-thin absolute bottom-[5px] right-[-20px] w-fit rounded-md p-1 px-2 text-sm font-bold text-matrix shadow-one"
          />
        </div>
        <div
          class="flex flex-row gap-4"
        >
          <button
            class="border-black bg-night-sky-thin transition-all-5s rounded-md border-[1px] p-4 text-xl text-secondary shadow-url hover:bg-matrixThin"
          >
            Purchase an undername
          </button>
          <button
            class="mocked-styled-1 b1cb9caz w14emrir b1cb9caz"
            style="--b1cb9caz-0: Manrope; --b1cb9caz-1: 0, 0, 0; --b1cb9caz-2: 30px; --b1cb9caz-3: 0px 0px 2px rgba(0, 0, 0, .15), 0px 4px 7px rgba(0, 0, 0, .1); --w14emrir-0: 18px; --w14emrir-1: rgba(109, 108, 105, 0.5);"
          >
            <span
              class="mocked-styled-2 czh4f0e"
            >
              Connect Wallet
            </span>
          </button>
        </div>
      </div>
      <div
        class="center flex flex-row"
      >
        Loading
      </div>
      <div
        class="modal-container p-10 flex flex-row justify-center items-center bg-[rgb(0,0,0,0.3)] z-50"
        style="opacity: 0;"
      >
        <div
          class="bg-[rgb(0,0,0,0.95)] text-secondary w-[500px] h-[200px] flex flex-col justify-center items-center p-10 rounded-lg shadow-url"
        >
          Signing Transaction, please wait.
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
